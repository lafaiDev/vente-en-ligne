{% form_theme form.optionsProduit 'CatalogueBundle:Produit:option.html.twig' %}

{{ form_start(form, {'attr': {'class': 'form-horizontal'}  }) }}

        <div class="control-group{% if form.libelle.vars.errors|length %} error{% endif %}" >
            {{ form_label(form.libelle, 'Libelle', {'label_attr': {'class': 'control-label'} }) }}
            <div class="controls">
                {{ form_widget(form.libelle, {'attr': {'class': 'span3'}}) }} {{ form_errors(form.libelle) }}
            </div>
        </div>
        <div class="control-group{% if form.categorie.vars.errors|length %} error{% endif %}">
            {{ form_label(form.categorie, 'categorie', {'label_attr': {'class': 'control-label'} }) }}
            <div class="controls">
                {{ form_widget(form.categorie) }} {{ form_errors(form.categorie) }}
            </div>
        </div>
        <div class="control-group" >
            {{ form_label(form.photo, 'photo', {'label_attr': {'class': 'control-label'} }) }}
            <div class="controls">
                {{ form_widget(form.photo) }}
        </div>
        </div>

        {{ form_widget(form.optionsProduit) }}

    {{ form_end(form) }}


    <script>
        //function de jQuery qui permete de lester le option so format de table et permet d'associer des produit avec des option-->
        jQuery(function($){
            // On récupère la balise <div> en question qui contient l'attribut « data-prototype » qui nous intéresse.
            var $container = $('#catalogue_cataloguebundle_produit_optionsProduit');


            // On ajoute un lien pour ajouter une nouvelle catégorie
            var $lienAjout = $('<a href="#" id="ajout_frais_annexe" class="btn">Ajouter une option</a>');
            $container.after($lienAjout);

            // On ajoute un nouveau champ à chaque clic sur le lien d'ajout.
            $lienAjout.click(function(e) {
                ajouterFraisAnnexe($container);
                e.preventDefault(); // évite qu'un # apparaisse dans l'URL
                return false;
            });

            // On définit un compteur unique pour nommer les champs qu'on va ajouter dynamiquement
            var index = $container.find(':input').length;

            // On ajoute un premier champ directement s'il n'en existe pas déjà un (cas d'un nouvel article par exemple).
            if (index == 0) {
            } else {
                // Pour chaque catégorie déjà existante, on ajoute un lien de suppression
                $container.children('tbody').children('tr').each(function() {
                    ajouterLienSuppression($(this));
                });
            }

            // La fonction qui ajoute un formulaire FactureClientPrestation
            function ajouterFraisAnnexe($container) {
                // Dans le contenu de l'attribut « data-prototype », on remplace :
                // - le texte "__name__label__" qu'il contient par le label du champ
                // - le texte "__name__" qu'il contient par le numéro du champ
                var $prototype = $($container.attr('data-prototype').replace(/__name__label__/g, 'Option n°' + (index+1))
                        .replace(/__name__/g, index));

                // On ajoute au prototype un lien pour pouvoir supprimer la catégorie
                ajouterLienSuppression($prototype);

                // On ajoute le prototype modifié à la fin de la balise <div>
                $container.append($prototype);

                // Enfin, on incrémente le compteur pour que le prochain ajout se fasse avec un autre numéro
                index++;
            }

            // La fonction qui ajoute un lien de suppression d'une catégorie
            function ajouterLienSuppression($prototype) {
                // Création du lien
                $lienSuppression = $('<td><a href="#" class="close">&times</a></td>');

                // Ajout du lien
                $prototype.append($lienSuppression);

                // Ajout du listener sur le clic du lien
                $lienSuppression.click(function(e) {
                    $prototype.remove();
                    e.preventDefault(); // évite qu'un # apparaisse dans l'URL
                    return false;
                });
            }
        });

    </script>
